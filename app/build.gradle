plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'arm64-v8a'
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    signingConfigs {
        release {
            storeFile file('../key.jks')
            storePassword '123456'
            keyAlias = 'qianbailu'
            keyPassword '123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    viewBinding {
        enabled = true
    }
    //文件输出
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //获取当前模式debug或release
            def buildType = variant.buildType.name
            if (buildType == "release") {
                variant.getPackageApplicationProvider().get().outputDirectory = new File("./${buildType}")
                outputFileName = "aiqiyi_${buildType}_v${defaultConfig.versionName}.apk"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.support.appcompat
    implementation rootProject.ext.support.constraintLayout
    implementation rootProject.ext.support.kotlin
    implementation rootProject.ext.support.ktx
    implementation rootProject.ext.support.material
    implementation rootProject.ext.support.swipeRefreshLayout
    implementation rootProject.ext.dependencies.jsoup
    implementation rootProject.ext.dependencies.brvah
    implementation rootProject.ext.dependencies.jzVideoPlayer
    implementation rootProject.ext.dependencies.bugly
    implementation rootProject.ext.dependencies.ijkJava
    debugImplementation rootProject.ext.dependencies.leakcanary
    implementation(rootProject.ext.dependencies.glide) {
        exclude group: "com.android.support"
    }
    kapt rootProject.ext.dependencies.glideCompiler
    implementation rootProject.ext.dependencies.roomRuntime
    implementation(rootProject.ext.dependencies.roomRxJava) {
        exclude group: "io.reactivex.rxjava2"
    }
    kapt rootProject.ext.dependencies.roomCompiler
    implementation project(path: ':core')

    // 测试用包
    testImplementation rootProject.ext.support.junit
    androidTestImplementation rootProject.ext.support.runner
    androidTestImplementation rootProject.ext.support.espresso
}
